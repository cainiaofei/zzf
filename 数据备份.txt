\begin{comment}
我们需要一些高质量的需求到代码的软件可追踪数据集。然而，当前领域内公开的需求到代码的追踪数据大多是一些小型系统的数据集，缺乏大型复杂系统的软件可追踪数据集。因此，我们整理了由代码托管平台管理的大型开源软件系统的数据集。我们的实验系统由一个被领域内广泛用于软件可追踪方法验证的高质量数据集iTrust系统和三个被广泛用于日常实践的开源大型软件系统Maven、Pig、Infinispan 组成。后三者由代码托管平台管理，研发人员通过issue-tracking工具组织软件的行为信息。我们利用issue-tracking 工具中的软件行为信息和代码托管平台的代码提交信息整理了需求到代码的追踪关系。
此外，我们的方法需要高质量的代码依赖信息，因此，我们提出了通过代码本身的测试用例得到代码依赖的方法。具体而言，我们通过运行系统自身的测试集合并插桩代码依赖捕获工具得到代码依赖子集，然后通过对代码依赖子集进行合并得到代码依赖信息。实验表明，我们的方法显著优于传统的信息检索方法。
与传统使用用户反馈的方法相比，我们的方法只需要少量的（约3.5\%）用户反馈信息即可达到与传统方法（用户需要遍历大部分列表）类似的效果。
\end{comment}